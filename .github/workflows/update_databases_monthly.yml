name: update-fasta-dbs

on:
  push:
  schedule:
    - cron: 30 12 * * *

jobs:
  update-dbs:
    runs-on: ubuntu-latest
      
    steps:   
      - name: Check out repository
        uses: actions/checkout@v4
          
      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::curl
            any::janitor
            any::dplyr
            any::tidyr
            any::data.table
            any::rsconnect
            any::renv
            any::shiny
            any::DT
            any::Biostrings
            any::shinyalert
            any::shinybusy
            any::stringr
            any::stringi
            any::BiocManager
            any::BiocVersion
            
      - name: Update Databases
        run: Rscript -e 'source("./scripts/update_databases.R")'

      - name: Generate renv lock file
        run: Rscript -e 'renv::snapshot()'
        
      - uses: r-lib/actions/setup-renv@v2

      - name: Commit files using git
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add -A
          git commit -m "automated monthly database update"
          git push origin

      - name: Authorize and deploy app
        env:
          # Provide your app name, account name, and server to be deployed below
          APPNAME: protDB_shiny
          ACCOUNT: jmvarberg
          SERVER: shinyapps.io # server to deploy
        run: |
          rsconnect::setAccountInfo("${{ secrets.RSCONNECT_USER }}", "${{ secrets.RSCONNECT_TOKEN }}", "${{ secrets.RSCONNECT_SECRET }}")
          rsconnect::deployApp(appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}")
        shell: Rscript {0}
          
